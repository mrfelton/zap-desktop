// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component.Form.PaySummaryOnchain should render correctly 1`] = `
<styled.div
  cryptoCurrencies={
    Array [
      Object {
        "key": "btc",
        "name": "BTC",
      },
      Object {
        "key": "bits",
        "name": "bits",
      },
      Object {
        "key": "sats",
        "name": "satoshis",
      },
    ]
  }
  cryptoCurrency="btc"
  currentTicker={
    Object {
      "EUR": 5656.01,
      "GBP": 5052.73,
      "USD": 6477.78,
    }
  }
  fiatCurrency="USD"
  queryFees={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setCryptoCurrency={[MockFunction]}
>
  <styled.div
    py={3}
  >
    <Styled(styled.div)
      alignItems="center"
    >
      <styled.div
        width={0.45454545454545453}
      >
        <Styled(styled.div)
          alignItems="baseline"
          flexWrap="wrap"
        >
          <styled.div>
            <Text
              fontSize={6}
              textAlign="left"
            >
              <CryptoValue
                value={1000}
              />
            </Text>
          </styled.div>
          <Connect(WithTheme(Dropdown))
            ml={2}
          />
        </Styled(styled.div)>
        <Text
          color="gray"
        >
           â‰ˆ 
          <FiatValue
            style="currency"
            value={1000}
          />
        </Text>
      </styled.div>
      <styled.div
        width={0.09090909090909091}
      >
        <Text
          color="lightningOrange"
          textAlign="center"
        >
          <SvgBigArrowRight
            height="28px"
            width="40px"
          />
        </Text>
      </styled.div>
      <styled.div
        width={0.45454545454545453}
      >
        <Text
          className="hint--bottom-left"
          data-hint="mmxyr3LNKbnbrf6jdGXZpCE4EDpMSZRf4c"
          textAlign="right"
        >
          <Truncate
            text="mmxyr3LNKbnbrf6jdGXZpCE4EDpMSZRf4c"
          />
        </Text>
      </styled.div>
    </Styled(styled.div)>
  </styled.div>
  <Bar
    border={0}
    borderBottom={1}
    borderColor="primaryText"
    is="hr"
    m={0}
    opacity={0.6}
  />
  <DataRow
    left={
      <FormattedMessage
        defaultMessage="Fee"
        id="components.Pay.fee"
        values={Object {}}
      />
    }
    right={
      <FormattedMessage
        defaultMessage="unknown"
        id="components.Pay.fee_unknown"
        values={Object {}}
      />
    }
  />
  <Bar
    border={0}
    borderBottom={1}
    borderColor="primaryText"
    is="hr"
    m={0}
    opacity={0.6}
  />
  <DataRow
    left={
      <FormattedMessage
        defaultMessage="Total"
        id="components.Pay.total"
        values={Object {}}
      />
    }
    right={
      <React.Fragment>
        <CryptoValue
          value={1000}
        />
         
        BTC
      </React.Fragment>
    }
  />
</styled.div>
`;
